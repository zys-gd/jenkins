pipeline {
    agent { node { label 'master' } }
    options {
        skipDefaultCheckout true
    }
    environment {
        DOCKER_REGISTRY='registry.digitalocean.com/jf-toplyvo'
        DOCKER_IMAGE_SUFFIX='dev'
    }
    stages {

        stage ('Checkout from git') {
            steps {
                script {
                    def specificCause = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
                    def user = specificCause ? specificCause.userName : '-'
                    buildDescription "Started by ${user}"
                    try {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '*/develop']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [],
                            userRemoteConfigs: [[
                                credentialsId: '7303d04c-541b-49a3-83f2-834b64810cc5',
                                url: 'git@github.com:transloyd/eventbus.git'
                            ]]
                        ])
                    } catch (exc) {
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }

        stage ('Login to Registry') {
            steps {
                script {
                    sh "doctl registry login"
                }

            }
        }

        stage ('Remove previous builds') {
            steps {
                script {
                    try {
                        sh "docker rmi -f \$(docker images -q --filter 'before=${DOCKER_REGISTRY}/eventbus-app-${DOCKER_IMAGE_SUFFIX}' --filter=reference='${DOCKER_REGISTRY}/*')"
                    } catch (exc) {}
                }

            }
        }

        stage ('Build app image') {
            steps {
                script {
                    sh "cp .docker/build/docker-compose.yml docker-compose.yml"
                    sh "docker-compose build node-app-image"
                    sh "docker tag $DOCKER_REGISTRY/eventbus-app-${DOCKER_IMAGE_SUFFIX} $DOCKER_REGISTRY/eventbus-app-${DOCKER_IMAGE_SUFFIX}"
                    sh "docker push $DOCKER_REGISTRY/eventbus-app-${DOCKER_IMAGE_SUFFIX}"
                }
            }
        }

        stage ('Logout from Registry') {
            steps {
                script {
                    sh "doctl registry logout"
                }

            }
        }
    }
}
