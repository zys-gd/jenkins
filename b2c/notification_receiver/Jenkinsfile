def targetAgent = env.STAGE.toBoolean() ? 'toplivo-stage' : 'toplivo-production-ssh'
def network = env.STAGE.toBoolean() ? 'stage' : 'prod'
pipeline {
	agent { node { label targetAgent } }
	options {
		skipDefaultCheckout true
	}

	stages {

		stage ('Checkout from git') {

			steps {
				script {
					try {
						checkout([
							$class: 'GitSCM',
							branches: [[name: '*/master']],
							doGenerateSubmoduleConfigurations: false,
							extensions: [],
							submoduleCfg: [],
							userRemoteConfigs: [[
								credentialsId: '7303d04c-541b-49a3-83f2-834b64810cc5',
								url: 'git@github.com:transloyd/toplyvo-notification.git'
							]]
						])
					}
					catch (exc) {
						currentBuild.result = 'FAILURE'
						currentStage.result = 'FAILURE'
					}
				}
			}
		}

		stage ('Restart with rebuild') {
			environment {
				env="${network}"
			}
			steps {
				script {
					sh "cp docker/docker-compose.prod.yml docker-compose.yml"
					sh "cp .env.dist .env"
					sh '''
						docker-compose down
	                    docker-compose up -d --build
					'''
				}
			}
		}

	}
}