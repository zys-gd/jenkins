pipeline {
	agent any
	environment {
		def DOCKER_USERNAME='jenkins'
        def DOCKER_PASSWORD='ch1qySOXu8Q'
        def DOCKER_REGISTRY='jf-dev.toplyvo.app'
    }
	stages {

		stage ('Checkout from git') {

			steps {
				script {
					try {
						checkout([
							$class: 'GitSCM',
							branches: [[name: '*/TPLV-846']],
							doGenerateSubmoduleConfigurations: false,
							extensions: [],
							submoduleCfg: [],
							userRemoteConfigs: [[
								credentialsId: '7303d04c-541b-49a3-83f2-834b64810cc5',
								url: 'git@github.com:transloyd/core.toplyvo.app.git'
							]]
						])
					}
					catch (exc) {
						currentBuild.result = 'FAILURE'
						currentStage.result = 'FAILURE'
					}
				}
			}
		}

		stage ('Login to Registry') {
			steps {
				script {
	                sh "docker login $DOCKER_REGISTRY -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD"
                }

			}
		}


		stage ('Build pure php image') {
			steps {
				script {
					sh "cp docker-compose.prod_build.yml docker-compose.yml"
					sh "cp .env.dev .env"
					sh "docker images"
					sh "docker-compose build php-fpm-image"
					sh "docker tag $DOCKER_REGISTRY/php-fpm-image $DOCKER_REGISTRY/php-fpm-image"
					sh "docker push $DOCKER_REGISTRY/php-fpm-image"
				}
			}
		}

		stage ('PHP preparations') {
			steps {
				script {
	                sh "docker-compose up -d composer"
	                sh "docker-compose exec -T composer composer install --no-dev --no-scripts"
	                sh "docker-compose exec -T composer php bin/console cache:clear --env=prod"
	                sh "docker-compose exec -T composer php bin/console cache:warmup --env=prod"
	                sh "docker-compose down"
                }

			}
		}

		stage ('Build production php') {
			steps {
				script {
	                sh "docker-compose build php"
	                sh "docker tag $DOCKER_REGISTRY/prod_toplyvo_php_fpm $DOCKER_REGISTRY/prod_toplyvo_php_fpm"
	                sh "docker push $DOCKER_REGISTRY/prod_toplyvo_php_fpm"
                }

			}
		}

		stage ('Build production nginx') {
			steps {
				script {
	                sh "docker-compose build nginx"
	                sh "docker tag $DOCKER_REGISTRY/prod_toplyvo_nginx $DOCKER_REGISTRY/prod_toplyvo_nginx"
	                sh "docker push $DOCKER_REGISTRY/prod_toplyvo_nginx"
                }

			}
		}

		stage ('Logout from Registry') {
			steps {
				script {
	                sh "docker logout $DOCKER_REGISTRY"
                }

			}
		}

	}
}