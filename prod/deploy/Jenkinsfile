pipeline {
	agent { node { label 'toplivo-test-ssh-deploy' } }
	environment {
		def DOCKER_USERNAME='jenkins'
        def DOCKER_PASSWORD='ch1qySOXu8Q'
        def DOCKER_REGISTRY='jf-dev.toplyvo.app'
    }
	parameters {
        gitParameter name: 'TAG',
                     type: 'PT_TAG',
                     defaultValue: 'v2.0.0',
                     description: 'Tag og docker image\'s build',
                     quickFilterEnabled: true,
                     sortMode: 'DESCENDING_SMART',
                     useRepository: 'git@github.com:transloyd/core.toplyvo.app.git'

    }
	stages {

		stage ('Checkout from git') {

			steps {
				script {
					try {
						checkout([
							$class: 'GitSCM',
							branches: [[name: '*/TPLV-846']],
							doGenerateSubmoduleConfigurations: false,
							extensions: [],
							submoduleCfg: [],
							userRemoteConfigs: [[
								credentialsId: '7303d04c-541b-49a3-83f2-834b64810cc5',
								url: 'git@github.com:transloyd/core.toplyvo.app.git'
							]]
						])
					}
					catch (exc) {
						currentBuild.result = 'FAILURE'
						currentStage.result = 'FAILURE'
					}
				}
			}
		}

		stage ('Login to Registry') {
			steps {
				script {
	                sh "docker login $DOCKER_REGISTRY -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD"
                }

			}
		}

		stage ('Apply builds') {
			environment {
                REDIS_HOST="test_toplivo_back_redis"
				DATABASE_HOST="test_toplivo_back_mysql"
				RABBITMQ_HOST="test_toplivo_back_rabbitmq"
            }
			steps {
				script {
					sh "cp docker-compose.prod.yml docker-compose.yml"
					sh "cp docker-compose.override_prod_test.yml docker-compose.override.yml"
					sh "cp .env.dev .env"
					sh "cp project/.env.dist project/.env"
					//sh "docker-compose pull"
					sh "docker pull jf-dev.toplyvo.app/prod_toplyvo_php_fpm:${params.TAG}"
					sh "docker pull jf-dev.toplyvo.app/prod_toplyvo_php_consumer:${params.TAG}"
					sh "docker pull jf-dev.toplyvo.app/prod_toplyvo_php_cli:${params.TAG}"
					sh "docker pull jf-dev.toplyvo.app/prod_toplyvo_nginx:${params.TAG}"

					sh "docker-compose up -d --build mysql"
					sh "docker-compose up -d php_cli"
					sh "docker-compose run -e REDIS_HOST=test_toplivo_back_redis -e DATABASE_HOST=test_toplivo_back_mysql -e RABBITMQ_HOST=test_toplivo_back_rabbitmq -e DATABASE_USER=root -e DATABASE_PASSWORD=root123456 php_cli php bin/console --configuration=./app/config/doctrine/migrations.yml doctrine:migrations:migrate --env=prod --allow-no-migration --no-interaction --no-debug"

					sh "docker-compose up -d"
				}
			}
		}

		stage ('Logout from Registry') {
			steps {
				script {
	                sh "docker logout $DOCKER_REGISTRY"
                }

			}
		}

	}
}